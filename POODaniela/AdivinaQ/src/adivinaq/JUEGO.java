/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package adivinaq;
import static javafx.scene.input.KeyCode.P;
import javax.swing.ImageIcon;
import java.util.Random;
/**
 *
 * @author IlseDaniela
 */
public class JUEGO extends javax.swing.JFrame {
int jugadas=0,aux;
int vector[]=new int [16];
static int puntos,personaje;
String puntaje,j;

    /**
     * Creates new form JUEGO
     */
    public JUEGO() {
        initComponents();
        this.setLocationRelativeTo(null);
        preguntas.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        preguntas = new javax.swing.JPanel();
        Menu4 = new javax.swing.JLabel();
        P1 = new javax.swing.JButton();
        P4 = new javax.swing.JButton();
        P7 = new javax.swing.JButton();
        P5 = new javax.swing.JButton();
        P8 = new javax.swing.JButton();
        P2 = new javax.swing.JButton();
        P9 = new javax.swing.JButton();
        P6 = new javax.swing.JButton();
        P3 = new javax.swing.JButton();
        P12 = new javax.swing.JButton();
        P11 = new javax.swing.JButton();
        P10 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        ERRORPC = new javax.swing.JLabel();
        Menu5 = new javax.swing.JLabel();
        Puntos = new javax.swing.JTextField();
        p3 = new javax.swing.JButton();
        p11 = new javax.swing.JButton();
        p12 = new javax.swing.JButton();
        p4 = new javax.swing.JButton();
        p14 = new javax.swing.JButton();
        p6 = new javax.swing.JButton();
        p5 = new javax.swing.JButton();
        p13 = new javax.swing.JButton();
        p16 = new javax.swing.JButton();
        p8 = new javax.swing.JButton();
        p7 = new javax.swing.JButton();
        p15 = new javax.swing.JButton();
        p10 = new javax.swing.JButton();
        p9 = new javax.swing.JButton();
        p1 = new javax.swing.JButton();
        p2 = new javax.swing.JButton();
        Menu10 = new javax.swing.JLabel();
        Iniciar = new javax.swing.JButton();
        Menu2 = new javax.swing.JLabel();
        REGLAS = new javax.swing.JButton();
        salir1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        panel1.setBackground(new java.awt.Color(204, 204, 255));

        preguntas.setBackground(new java.awt.Color(153, 153, 255));

        Menu4.setFont(new java.awt.Font("Andalus", 0, 18)); // NOI18N
        Menu4.setForeground(new java.awt.Color(0, 0, 51));
        Menu4.setText("Preguntas");

        P1.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
        P1.setForeground(new java.awt.Color(51, 0, 51));
        P1.setText("¿Tiene cabello negro?");
        P1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P1ActionPerformed(evt);
            }
        });

        P4.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
        P4.setText("¿Tiene ojos cafe?");
        P4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P4ActionPerformed(evt);
            }
        });

        P7.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
        P7.setText("¿Tiene accesorios?");
        P7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P7ActionPerformed(evt);
            }
        });

        P5.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
        P5.setText("¿Tiene ojos azules?");
        P5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P5ActionPerformed(evt);
            }
        });

        P8.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
        P8.setText("¿No tiene cabello?");
        P8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P8ActionPerformed(evt);
            }
        });

        P2.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
        P2.setForeground(new java.awt.Color(51, 0, 51));
        P2.setText("¿Tiene cabello rubio?");
        P2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P2ActionPerformed(evt);
            }
        });

        P9.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
        P9.setText("¿Su baraba es cafe?");
        P9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P9ActionPerformed(evt);
            }
        });

        P6.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
        P6.setText("¿Usa Barba?");
        P6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P6ActionPerformed(evt);
            }
        });

        P3.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
        P3.setForeground(new java.awt.Color(51, 0, 51));
        P3.setText("¿Tiene cabello cafe?");
        P3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P3ActionPerformed(evt);
            }
        });

        P12.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
        P12.setText("¿Su baraba es negra?");
        P12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P12ActionPerformed(evt);
            }
        });

        P11.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
        P11.setText("¿Tiene cabello rizado?");
        P11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P11ActionPerformed(evt);
            }
        });

        P10.setFont(new java.awt.Font("Andalus", 0, 12)); // NOI18N
        P10.setText("¿Tiene piel oscura?");
        P10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P10ActionPerformed(evt);
            }
        });

        ERRORPC.setFont(new java.awt.Font("AR JULIAN", 0, 12)); // NOI18N
        ERRORPC.setForeground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout preguntasLayout = new javax.swing.GroupLayout(preguntas);
        preguntas.setLayout(preguntasLayout);
        preguntasLayout.setHorizontalGroup(
            preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preguntasLayout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preguntasLayout.createSequentialGroup()
                        .addComponent(Menu4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addGap(210, 210, 210))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preguntasLayout.createSequentialGroup()
                        .addGroup(preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(preguntasLayout.createSequentialGroup()
                                .addGroup(preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(P1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(P7, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(P4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(P2)
                                    .addComponent(P5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(P8, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, preguntasLayout.createSequentialGroup()
                                .addComponent(P10, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(P11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(P3)
                            .addComponent(P6, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P9, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(P12))
                        .addGap(46, 46, 46))))
            .addGroup(preguntasLayout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(ERRORPC, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        preguntasLayout.setVerticalGroup(
            preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(preguntasLayout.createSequentialGroup()
                .addGroup(preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Menu4)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(preguntasLayout.createSequentialGroup()
                            .addComponent(P1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(P4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(P7))
                        .addGroup(preguntasLayout.createSequentialGroup()
                            .addComponent(P2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(P5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(P8)))
                    .addGroup(preguntasLayout.createSequentialGroup()
                        .addComponent(P3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(P6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(P9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(preguntasLayout.createSequentialGroup()
                        .addGroup(preguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(P11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(P10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ERRORPC, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(P12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        Menu5.setFont(new java.awt.Font("Aparajita", 0, 24)); // NOI18N
        Menu5.setForeground(new java.awt.Color(51, 0, 51));
        Menu5.setText("Puntos");

        Puntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PuntosActionPerformed(evt);
            }
        });

        p3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.11.png"))); // NOI18N
        p3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p3ActionPerformed(evt);
            }
        });

        p11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.6.png"))); // NOI18N
        p11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p11ActionPerformed(evt);
            }
        });

        p12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.15.png"))); // NOI18N
        p12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p12ActionPerformed(evt);
            }
        });

        p4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.3.png"))); // NOI18N
        p4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p4ActionPerformed(evt);
            }
        });

        p14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.19.png"))); // NOI18N
        p14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p14ActionPerformed(evt);
            }
        });

        p6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.9.png"))); // NOI18N
        p6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p6ActionPerformed(evt);
            }
        });

        p5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.4.png"))); // NOI18N
        p5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p5ActionPerformed(evt);
            }
        });

        p13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.12.png"))); // NOI18N
        p13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p13ActionPerformed(evt);
            }
        });

        p16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.7.png"))); // NOI18N
        p16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p16ActionPerformed(evt);
            }
        });

        p8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/2.1.png"))); // NOI18N
        p8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p8ActionPerformed(evt);
            }
        });

        p7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.16.png"))); // NOI18N
        p7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p7ActionPerformed(evt);
            }
        });

        p15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.5.png"))); // NOI18N
        p15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p15ActionPerformed(evt);
            }
        });

        p10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.13.png"))); // NOI18N
        p10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p10ActionPerformed(evt);
            }
        });

        p9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.14.png"))); // NOI18N
        p9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p9ActionPerformed(evt);
            }
        });

        p1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.1.png"))); // NOI18N
        p1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p1ActionPerformed(evt);
            }
        });

        p2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/1.10.png"))); // NOI18N
        p2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p2ActionPerformed(evt);
            }
        });

        Menu10.setFont(new java.awt.Font("Aparajita", 0, 24)); // NOI18N
        Menu10.setForeground(new java.awt.Color(0, 51, 51));
        Menu10.setText("Tienes 4 Turnos para Adivinar");

        Iniciar.setFont(new java.awt.Font("AR CHRISTY", 0, 24)); // NOI18N
        Iniciar.setForeground(new java.awt.Color(51, 0, 51));
        Iniciar.setText("Iniciar Partida");
        Iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IniciarActionPerformed(evt);
            }
        });

        Menu2.setFont(new java.awt.Font("AR CHRISTY", 0, 36)); // NOI18N
        Menu2.setForeground(new java.awt.Color(51, 0, 51));
        Menu2.setText("¿?  ADIVINA QUIEN  ¿?");
        Menu2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        REGLAS.setBackground(new java.awt.Color(255, 255, 255));
        REGLAS.setFont(new java.awt.Font("HP Simplified", 0, 24)); // NOI18N
        REGLAS.setForeground(new java.awt.Color(0, 204, 204));
        REGLAS.setText("?");
        REGLAS.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(0, 204, 204), new java.awt.Color(0, 204, 204), new java.awt.Color(0, 204, 204)));
        REGLAS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                REGLASActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(preguntas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(p1)
                                    .addComponent(p9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(p2)
                                    .addComponent(p10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(p3)
                                    .addComponent(p11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(p4)
                                    .addComponent(p12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(p5)
                                    .addComponent(p13)))
                            .addGroup(panel1Layout.createSequentialGroup()
                                .addComponent(Iniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)))
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(p6)
                            .addComponent(p14))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p7)
                    .addComponent(p15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p8)
                    .addComponent(p16))
                .addContainerGap(16, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Menu10)
                .addGap(424, 424, 424))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addComponent(REGLAS, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Menu2)
                .addGap(180, 180, 180)
                .addComponent(Menu5)
                .addGap(18, 18, 18)
                .addComponent(Puntos, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(Puntos, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Menu5))
                            .addComponent(Menu2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(REGLAS, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addComponent(p3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(p11))
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addComponent(p5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(p13))
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addComponent(p6)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(p14))
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addComponent(p7)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(p15))
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addComponent(p8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(p16))
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addComponent(p4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(p12))
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addComponent(p1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(p9))
                        .addGroup(panel1Layout.createSequentialGroup()
                            .addComponent(p2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(p10))))
                .addGap(32, 32, 32)
                .addComponent(Menu10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Iniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(preguntas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(9, 9, 9))
        );

        salir1.setFont(new java.awt.Font("AR JULIAN", 0, 18)); // NOI18N
        salir1.setForeground(new java.awt.Color(255, 102, 102));
        salir1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/adivinaq/IMAGENES/icons8_Multiply_32px.png"))); // NOI18N
        salir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(529, 529, 529)
                    .addComponent(salir1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(530, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(336, 336, 336)
                    .addComponent(salir1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(337, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void P1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P1ActionPerformed
      if (jugadas<4){
          switch (personaje){
                case 1:
                    p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p6.setVisible(false);
                    vector[5]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p12.setVisible(false);
                    vector[11]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p14.setVisible(false);
                    vector[13]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P1.setVisible(false);
                    P2.setVisible(false);
                    P3.setVisible(false);
                    P8.setVisible(false);
                    break;
                    case 2:
                    P1.setVisible(false);
                    ERRORPC.setText("No tiene cabello Negro");
                        break;
                    case 3:
                        P1.setVisible(false);
                        ERRORPC.setText("No tiene cabello Negro");
                        break;
                    case 4:
                        P1.setVisible(false);
                        ERRORPC.setText("No tiene cabello Negro");
                        break;
                    case 5:
                        P1.setVisible(false);
                        ERRORPC.setText("No tiene cabello Negro");
                        break;
                    case 6:
                        P1.setVisible(false);
                        ERRORPC.setText("No tiene cabello Negro");
                        break;
                    case 7:
                      p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p6.setVisible(false);
                    vector[5]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p12.setVisible(false);
                    vector[11]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p14.setVisible(false);
                    vector[13]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P1.setVisible(false);
                    P2.setVisible(false);
                    P3.setVisible(false);
                    P8.setVisible(false);
                        break;
                    case 8:
                    p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p6.setVisible(false);
                    vector[5]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p12.setVisible(false);
                    vector[11]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p14.setVisible(false);
                    vector[13]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P1.setVisible(false);
                    P2.setVisible(false);
                    P3.setVisible(false);
                    P8.setVisible(false);
                    break;
                    case 9:
                       p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p6.setVisible(false);
                    vector[5]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p12.setVisible(false);
                    vector[11]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p14.setVisible(false);
                    vector[13]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P1.setVisible(false);
                    P2.setVisible(false);
                    P3.setVisible(false);
                    P8.setVisible(false);
                        break;
                    case 10:
                        P1.setVisible(false);
                        ERRORPC.setText("No tiene cabello Negro");
                        break;
                    case 11:
                        P1.setVisible(false);
                        ERRORPC.setText("No tiene cabello Negro");
                        break;
                    case 12:
                        P1.setVisible(false);
                        ERRORPC.setText("No tiene cabello Negro");
                        break;
                    case 13:
                        P1.setVisible(false);
                        ERRORPC.setText("No tiene cabello Negro");
                        break;
                    case 14:
                        P1.setVisible(false);
                        ERRORPC.setText("No tiene cabello Negro");
                        break;
                    case 15:
                        P1.setVisible(false);
                        ERRORPC.setText("No tiene cabello Negro");
                        break;
                    case 16:
                        P1.setVisible(false);
                        ERRORPC.setText("No tiene cabello Negro");
                        break;
                        
                }
          jugadas=jugadas+1;
          
          j=String.valueOf(jugadas);
          Menu10.setText("Llevas "+j+" jugadas de 4"); 
         
          
      aux=0;
     for(int i=0;i<16;i++){
      if(vector [i]==1){
          aux=aux+1;
          }
      
      }   
     if (aux==1){
      puntos=puntos+100;
      Puntuacion pun=new Puntuacion();
      pun.setVisible(true);
      this.setVisible(false);
      }
      }
      else{
      puntosp pun=new puntosp();
      pun.setVisible(true);
      this.setVisible(false);
      }
    }//GEN-LAST:event_P1ActionPerformed

    private void P4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P4ActionPerformed
     if (jugadas<4){
              switch (personaje){
                case 1:
                    P4.setVisible(false);
                    ERRORPC.setText("No tiene ojos cafe");
                    break;
                    case 2:
                     p1.setVisible(false);
                     vector[0]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                        break;
                    case 3:
                   p1.setVisible(false);
                     vector[0]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);                       
                    break;
                    case 4:
                      p1.setVisible(false);
                     vector[0]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                        break;
                    case 5:
                     P4.setVisible(false);
                    ERRORPC.setText("No tiene ojos cafe");
                    break;
                    case 6:
                 p1.setVisible(false);
                     vector[0]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                        break;
                    case 7:
                     p1.setVisible(false);
                     vector[0]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                       
                        break;
                    case 8:
              P4.setVisible(false);
                    ERRORPC.setText("No tiene ojos cafe");
                    break;
                    case 9:
                     P4.setVisible(false);
                    ERRORPC.setText("No tiene ojos cafe");
                        break;
                    case 10:
                   p1.setVisible(false);
                     vector[0]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                        break;
                    case 11:
                     p1.setVisible(false);
                     vector[0]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                        break;
                    case 12:
                    P4.setVisible(false);
                    ERRORPC.setText("No tiene ojos cafe");
                    break;
                    case 13:
                     p1.setVisible(false);
                     vector[0]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                        break;
                    case 14:
                     p1.setVisible(false);
                     vector[0]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                        break;
                    case 15:
                     p1.setVisible(false);
                     vector[0]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                        break;
                    case 16:
                    p1.setVisible(false);
                     vector[0]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                        break;
                        
                }
        jugadas=jugadas+1;
        j=String.valueOf(jugadas);
          Menu10.setText("Llevas "+j+" jugadas de 4"); 
      aux=0;
     for(int i=0;i<16;i++){
      if(vector [i]==1){
          aux=aux+1;
          }
      
      }   
     if (aux==1){
      puntos=puntos+100;
      Puntuacion pun=new Puntuacion();
      pun.setVisible(true);
      this.setVisible(false);
      }
      }
      else{
          puntosp pun=new puntosp();
      pun.setVisible(true);
      this.setVisible(false);
      }
      
    }//GEN-LAST:event_P4ActionPerformed

    private void P7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P7ActionPerformed
        if (jugadas<4){
                         switch (personaje){
                case 1:
                    p2.setVisible(false);
                       vector[1]=0;
                    p3.setVisible(false);
                     vector[2]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p13.setVisible(false);
                     vector[12]=0;
                    p14.setVisible(false);
                     vector[13]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                     p16.setVisible(false);
                     vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P7.setVisible(false);
                    break;
                    case 2:
                    P7.setVisible(false);
                    ERRORPC.setText("No tiene accesorios");
                        break;
                    case 3:
                      P7.setVisible(false);
                    ERRORPC.setText("No tiene accesorios");
                        break;
                    case 4:
                       p2.setVisible(false);
                       vector[1]=0;
                    p3.setVisible(false);
                     vector[2]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p13.setVisible(false);
                     vector[12]=0;
                    p14.setVisible(false);
                     vector[13]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                     p16.setVisible(false);
                     vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P7.setVisible(false);
                        break;
                    case 5:
                    p2.setVisible(false);
                       vector[1]=0;
                    p3.setVisible(false);
                     vector[2]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p13.setVisible(false);
                     vector[12]=0;
                    p14.setVisible(false);
                     vector[13]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                     p16.setVisible(false);
                     vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P7.setVisible(false);
                    
                    break;
                    case 6:
                    p2.setVisible(false);
                       vector[1]=0;
                    p3.setVisible(false);
                     vector[2]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p13.setVisible(false);
                     vector[12]=0;
                    p14.setVisible(false);
                     vector[13]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                     p16.setVisible(false);
                     vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P7.setVisible(false);
                        break;
                    case 7:
                         P7.setVisible(false);
                    ERRORPC.setText("No tiene accesorios");
                       
                        break;
                    case 8:
                  p2.setVisible(false);
                       vector[1]=0;
                    p3.setVisible(false);
                     vector[2]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p13.setVisible(false);
                     vector[12]=0;
                    p14.setVisible(false);
                     vector[13]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                     p16.setVisible(false);
                     vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P7.setVisible(false);
                    break;
                    case 9:
                   P7.setVisible(false);
                    ERRORPC.setText("No tiene accesorios");
                        break;
                    case 10:
                   p2.setVisible(false);
                       vector[1]=0;
                    p3.setVisible(false);
                     vector[2]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p13.setVisible(false);
                     vector[12]=0;
                    p14.setVisible(false);
                     vector[13]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                     p16.setVisible(false);
                     vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P7.setVisible(false);
                        break;
                    case 11:
                       P7.setVisible(false);
                    ERRORPC.setText("No tiene accesorios");
                        break;
                    case 12:
                    P7.setVisible(false);
                    ERRORPC.setText("No tiene accesorios");
                        break;
                    case 13:
                    P7.setVisible(false);
                    ERRORPC.setText("No tiene accesorios");
                        break;
                    case 14:
                    P7.setVisible(false);
                    ERRORPC.setText("No tiene accesorios");
                        break;
                    case 15:
                    P7.setVisible(false);
                    ERRORPC.setText("No tiene accesorios");
                        break;
                    case 16:
                     P7.setVisible(false);
                    ERRORPC.setText("No tiene accesorios");
                        break;
                        
                }
        jugadas=jugadas+1;
        j=String.valueOf(jugadas);
          Menu10.setText("Llevas "+j+"j ugadas de 4"); 
      aux=0;
     for(int i=0;i<16;i++){
      if(vector [i]==1){
          aux=aux+1;
          }
      
      }   
     if (aux==1){
      puntos=puntos+100;
      Puntuacion pun=new Puntuacion();
      pun.setVisible(true);
      this.setVisible(false);
      }
      }
      else{
          puntosp pun=new puntosp();
      pun.setVisible(true);
      this.setVisible(false);
      }
    }//GEN-LAST:event_P7ActionPerformed

    private void P5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P5ActionPerformed
        if(jugadas<4){
            switch (personaje){
                case 1:
                    P5.setVisible(false);
                    ERRORPC.setText("No tiene ojos azules");
                    break;
                    case 2:
                    P5.setVisible(false);
                    ERRORPC.setText("No tiene ojos azules");
                        break;
                    case 3:
                       P5.setVisible(false);
                       ERRORPC.setText("No tiene ojos azules");
                        break;
                    case 4:
                        P5.setVisible(false);
                        ERRORPC.setText("No tiene ojos azules");
                        break;
                    case 5:
                    p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p6.setVisible(false);
                    vector[5]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p14.setVisible(false);
                    vector[13]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                    break;
                    case 6:
                        P5.setVisible(false);
                        ERRORPC.setText("No tiene ojos azules");
                        break;
                    case 7:
                        P5.setVisible(false);
                       ERRORPC.setText("No tiene ojos azules");
                       
                        break;
                    case 8:
                    p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p6.setVisible(false);
                    vector[5]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p14.setVisible(false);
                    vector[13]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                    break;
                    case 9:
                            p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p6.setVisible(false);
                    vector[5]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p14.setVisible(false);
                    vector[13]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                        break;
                    case 10:
                        P5.setVisible(false);
                       ERRORPC.setText("No tiene ojos azules");
                        break;
                    case 11:
                       P5.setVisible(false);
                       ERRORPC.setText("No tiene ojos azules");
                        break;
                    case 12:
                            p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p6.setVisible(false);
                    vector[5]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p14.setVisible(false);
                    vector[13]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P5.setVisible(false);
                    P4.setVisible(false);
                        break;
                    case 13:
                     P5.setVisible(false);
                       ERRORPC.setText("No tiene ojos azules");
                        break;
                    case 14:
                        P5.setVisible(false);
                       ERRORPC.setText("No tiene ojos azules");
                        break;
                    case 15:
                        P5.setVisible(false);
                       ERRORPC.setText("No tiene ojos azules");
                        break;
                    case 16:
                        P5.setVisible(false);
                       ERRORPC.setText("No tiene ojos azules");
                        break;
                        
                }
         jugadas=jugadas+1;
         j=String.valueOf(jugadas);
          Menu10.setText("Llevas "+j+" jugadas de 4"); 
      aux=0;
     for(int i=0;i<16;i++){
      if(vector [i]==1){
          aux=aux+1;
          }
      
      }   
     if (aux==1){
      puntos=puntos+100;
      Puntuacion pun=new Puntuacion();
      pun.setVisible(true);
      this.setVisible(false);
      }
      }
      else{
          puntosp pun=new puntosp();
      pun.setVisible(true);
      this.setVisible(false);
      }
    }//GEN-LAST:event_P5ActionPerformed

    private void P8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P8ActionPerformed
        if(jugadas<4){
            switch (personaje){
                case 1:
                    P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                    break;
                    case 2:
                   P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                        break;
                    case 3:
                    p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                    vector[1]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p6.setVisible(false);
                    vector[5]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p9.setVisible(false);
                    vector[8]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p12.setVisible(false);
                    vector[11]=0;
                    p14.setVisible(false);
                    vector[13]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P8.setVisible(false);
                        break;
                    case 4:
                         P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                      
                        break;
                    case 5:
                       P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                    
                    break;
                    case 6:
                    P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                        break;
                    case 7:
                        P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                       
                        break;
                    case 8:
                   p2.setVisible(false);
                  P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                    break;
                    case 9:
                  P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                        break;
                    case 10:
                    P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                        break;
                    case 11:
                       P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                        break;
                    case 12:
                   P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                        break;
                    case 13:
                  p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                    vector[1]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p6.setVisible(false);
                    vector[5]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p9.setVisible(false);
                    vector[8]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p12.setVisible(false);
                    vector[11]=0;
                    p14.setVisible(false);
                    vector[13]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P8.setVisible(false);
                        break;
                    case 14:
                   P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                        break;
                    case 15:
                   P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                        break;
                    case 16:
                     P8.setVisible(false);
                    ERRORPC.setText("Si tiene cabello");
                        break;
                        
                }
        jugadas=jugadas+1;
        j=String.valueOf(jugadas);
          Menu10.setText("Llevas "+j+" jugadas de 4"); 
      aux=0;
     for(int i=0;i<16;i++){
      if(vector [i]==1){
          aux=aux+1;
          }
      
      }   
     if (aux==1){
      puntos=puntos+100;
      Puntuacion pun=new Puntuacion();
      pun.setVisible(true);
      this.setVisible(false);
      }
      }
      else{
          puntosp pun=new puntosp();
      pun.setVisible(true);
      this.setVisible(false);
      }
    }//GEN-LAST:event_P8ActionPerformed

    private void P2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P2ActionPerformed
        if (jugadas<4){
            
            switch (personaje){
                case 1:
                    P2.setVisible(false);
                    ERRORPC.setText("No tiene cabello Rubio");
                    break;
                    case 2:
                    P2.setVisible(false);
                    ERRORPC.setText("No tiene cabello Rubio");
                        break;
                    case 3:
                        P2.setVisible(false);
                    ERRORPC.setText("No tiene cabello Rubio");
                        break;
                    case 4:
                        P2.setVisible(false);
                    ERRORPC.setText("No tiene cabello Rubio");
                        break;
                    case 5:
                    p1.setVisible(false);  
                   p1.setVisible(false); 
                     vector[0]=0;
                    p2.setVisible(false);
                     vector[1]=0;
                    p3.setVisible(false);
                     vector[2]=0;
                    p4.setVisible(false);
                     vector[3]=0;
                    p6.setVisible(false);
                     vector[5]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p13.setVisible(false);
                     vector[12]=0;
                    p14.setVisible(false);
                     vector[13]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                    P1.setVisible(false);
                    P2.setVisible(false);
                    P3.setVisible(false);
                    P8.setVisible(false);
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                        break;
                    case 6:
                       P2.setVisible(false);
                    ERRORPC.setText("No tienecabello Rubio");
                        break;
                    case 7:
                    P2.setVisible(false);
                    ERRORPC.setText("No tienecabello Rubio");
                        break;
                    case 8:
                    P2.setVisible(false);
                    ERRORPC.setText("No tienecabello Rubio");
                    break;
                    case 9:
                     P2.setVisible(false);
                    ERRORPC.setText("No tienecabello Rubio");
                   
                        break;
                    case 10:
                 p1.setVisible(false); 
                     vector[0]=0;
                    p2.setVisible(false);
                     vector[1]=0;
                    p3.setVisible(false);
                     vector[2]=0;
                    p4.setVisible(false);
                     vector[3]=0;
                    p6.setVisible(false);
                     vector[5]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p13.setVisible(false);
                     vector[12]=0;
                    p14.setVisible(false);
                     vector[13]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                    P1.setVisible(false);
                    P2.setVisible(false);
                    P3.setVisible(false);
                    P8.setVisible(false);
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                        break;
                    case 11:
                       P2.setVisible(false);
                    ERRORPC.setText("No tienecabello Rubio");
                        break;
                    case 12:
                        P2.setVisible(false);
                    ERRORPC.setText("No tienecabello Rubio");
                        break;
                    case 13:
                        P2.setVisible(false);
                    ERRORPC.setText("No tienecabello Rubio");
                        break;
                    case 14:
                        P2.setVisible(false);
                    ERRORPC.setText("No tienecabello Rubio");
                        break;
                    case 15:
                        P2.setVisible(false);
                    ERRORPC.setText("No tienecabello Rubio");
                        break;
                    case 16:
                    p1.setVisible(false); 
                     vector[0]=0;
                    p2.setVisible(false);
                     vector[1]=0;
                    p3.setVisible(false);
                     vector[2]=0;
                    p4.setVisible(false);
                     vector[3]=0;
                    p6.setVisible(false);
                     vector[5]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p13.setVisible(false);
                     vector[12]=0;
                    p14.setVisible(false);
                     vector[13]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                    P1.setVisible(false);
                    P2.setVisible(false);
                    P3.setVisible(false);
                    P8.setVisible(false);
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    break;
                }
        jugadas=jugadas+1;
        j=String.valueOf(jugadas);
          Menu10.setText("Llevas "+j+" jugadas de 4"); 
      aux=0;
     for(int i=0;i<16;i++){
      if(vector [i]==1){
          aux=aux+1;
          }
      
      }   
     if (aux==1){
      puntos=puntos+100;
      Puntuacion pun=new Puntuacion();
      pun.setVisible(true);
      this.setVisible(false);
      }
      }
      else{
          puntosp pun=new puntosp();
      pun.setVisible(true);
      this.setVisible(false);
      }
    }//GEN-LAST:event_P2ActionPerformed

    private void P9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P9ActionPerformed
        if (jugadas<4){
            switch (personaje){
                case 1:
                    P6.setVisible(false);
                    P9.setVisible(false);
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                    break;
                    case 2:
                    
                    P9.setVisible(false);
                    ERRORPC.setText("No tiene Barba cafe");
                        break;
                    case 3:
            p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                     vector[2]=0;
                    p4.setVisible(false);
                     vector[3]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p10.setVisible(false);
                     vector[9]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p13.setVisible(false);
                     vector[12]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                    p16.setVisible(false);
                     vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P9.setVisible(false);
                        break;
                    case 4:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 5:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                    
                    break;
                    case 6:
                    p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                     vector[2]=0;
                    p4.setVisible(false);
                     vector[3]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p10.setVisible(false);
                     vector[9]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p13.setVisible(false);
                     vector[12]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                    p16.setVisible(false);
                     vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P9.setVisible(false);
                        break;
                    case 7:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                       
                        break;
                    case 8:
                     P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                    break;
                    case 9:
                    
                    P9.setVisible(false);
                    ERRORPC.setText("No tiene Barba cafe");
                        break;
                    case 10:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                        ERRORPC.setText("No tiene Barba");
                        break;
                    case 11:
                        P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 12:
                    P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 13:
                   
                    P9.setVisible(false);
                    ERRORPC.setText("No tiene Barba cafe");
                        break;
                    case 14:
                    p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                     vector[2]=0;
                    p4.setVisible(false);
                     vector[3]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p9.setVisible(false);
                     vector[8]=0;
                    p10.setVisible(false);
                     vector[9]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p13.setVisible(false);
                     vector[12]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                    p16.setVisible(false);
                     vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P9.setVisible(false);
                        break;
                    case 15:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 16:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                        
                }
        jugadas=jugadas+1;
        j=String.valueOf(jugadas);
          Menu10.setText("Llevas "+j+" jugadas de 4"); 
      aux=0;
     for(int i=0;i<16;i++){
      if(vector [i]==1){
          aux=aux+1;
          }
      
      }   
     if (aux==1){
      puntos=puntos+100;
      Puntuacion pun=new Puntuacion();
      pun.setVisible(true);
      this.setVisible(false);
      }
      }
      else{
          puntosp pun=new puntosp();
      pun.setVisible(true);
      this.setVisible(false);
      }
       
    }//GEN-LAST:event_P9ActionPerformed

    private void P6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P6ActionPerformed
        if(jugadas<4){
            switch (personaje){
                case 1:
                    P6.setVisible(false);
                    P9.setVisible(false);
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                    break;
                    case 2:
                   p1.setVisible(false);
                   vector[0]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p12.setVisible(false);
                    vector[11]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P6.setVisible(false);
                        break;
                    case 3:
                    p1.setVisible(false);
                   vector[0]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p12.setVisible(false);
                    vector[11]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P6.setVisible(false);
                      
                        break;
                    case 4:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 5:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                    
                    break;
                    case 6:
                  p1.setVisible(false);
                   vector[0]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p12.setVisible(false);
                    vector[11]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P6.setVisible(false);
                        break;
                    case 7:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                       
                        break;
                    case 8:
                     P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                    break;
                    case 9:
                    p1.setVisible(false);
                   vector[0]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p12.setVisible(false);
                    vector[11]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P6.setVisible(false);
                        break;
                    case 10:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                        ERRORPC.setText("No tiene Barba");
                        break;
                    case 11:
                        P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 12:
                    P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 13:
                    p1.setVisible(false);
                   vector[0]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p12.setVisible(false);
                    vector[11]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P6.setVisible(false);
                        break;
                    case 14:
                        p1.setVisible(false);
                   vector[0]=0;
                    p4.setVisible(false);
                    vector[3]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p11.setVisible(false);
                    vector[10]=0;
                    p12.setVisible(false);
                    vector[11]=0;
                    p15.setVisible(false);
                    vector[14]=0;
                    p16.setVisible(false);
                    vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P6.setVisible(false);
                        break;
                    case 15:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 16:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                        
                }
        jugadas=jugadas+1;
        j=String.valueOf(jugadas);
          Menu10.setText("Llevas "+j+" jugadas de 4"); 
      aux=0;
     for(int i=0;i<16;i++){
      if(vector [i]==1){
          aux=aux+1;
          }
      
      }   
     if (aux==1){
      puntos=puntos+100;
      Puntuacion pun=new Puntuacion();
      pun.setVisible(true);
      this.setVisible(false);
      }
      }
      else{
          puntosp pun=new puntosp();
      pun.setVisible(true);
      this.setVisible(false);
      }
        
    }//GEN-LAST:event_P6ActionPerformed

    private void P3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P3ActionPerformed
     if (jugadas<4)  {
          switch (personaje){
                case 1:
                    P3.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Cafe");
                    break;
                    case 2:
                     P3.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Cafe");
                        break;
                    case 3:
                         P3.setVisible(false);
                         ERRORPC.setText("No tiene Cabello Cafe");
                        break;
                    case 4:
                    p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p9.setVisible(false);
                    vector[8]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p16.setVisible(false);
                    vector[14]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P1.setVisible(false);
                    P2.setVisible(false);
                    P3.setVisible(false);
                    P8.setVisible(false);
                        break;
                    case 5:
                         P3.setVisible(false);
                         ERRORPC.setText("No tiene Cabello Cafe");
                        break;
                    case 6:
                     p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p9.setVisible(false);
                    vector[8]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p16.setVisible(false);
                    vector[14]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P1.setVisible(false);
                    P2.setVisible(false);
                    P3.setVisible(false);
                    P8.setVisible(false);
                        break;
                    case 7:
                       P3.setVisible(false);
                         ERRORPC.setText("No tiene Cabello Cafe");
                        break;
                    case 8:
                        P3.setVisible(false);
                         ERRORPC.setText("No tiene Cabello Cafe");
                    break;
                    case 9:
                         P3.setVisible(false);
                         ERRORPC.setText("No tiene Cabello Cafe");
                        break;
                    case 10:
                         P3.setVisible(false);
                         ERRORPC.setText("No tiene Cabello Cafe");
                        break;
                    case 11:
                   p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p9.setVisible(false);
                    vector[8]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p16.setVisible(false);
                    vector[14]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P1.setVisible(false);
                    P2.setVisible(false);
                    P3.setVisible(false);
                    P8.setVisible(false);
                    break;
                    case 12:
                     p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p9.setVisible(false);
                    vector[8]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p16.setVisible(false);
                    vector[14]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P1.setVisible(false);
                    P2.setVisible(false);
                    P3.setVisible(false);
                    P8.setVisible(false);
                    break;
                    case 13:
                         P3.setVisible(false);
                         ERRORPC.setText("No tiene Cabello Cafe");
                        break;
                    case 14:
                   p1.setVisible(false);
                    vector[0]=0;
                    p2.setVisible(false);
                    vector[1]=0;
                    p3.setVisible(false);
                    vector[2]=0;
                    p5.setVisible(false);
                    vector[4]=0;
                    p7.setVisible(false);
                    vector[6]=0;
                    p8.setVisible(false);
                    vector[7]=0;
                    p9.setVisible(false);
                    vector[8]=0;
                    p10.setVisible(false);
                    vector[9]=0;
                    p13.setVisible(false);
                    vector[12]=0;
                    p16.setVisible(false);
                    vector[14]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P1.setVisible(false);
                    P2.setVisible(false);
                    P3.setVisible(false);
                    P8.setVisible(false);
                        break;
                    case 16:
                         P3.setVisible(false);
                         ERRORPC.setText("No tiene Cabello Cafe");
                        break;
                        
                }
      jugadas=jugadas+1;
      j=String.valueOf(jugadas);
          Menu10.setText("Llevas "+j+" jugadas de 4"); 
      aux=0;
     for(int i=0;i<16;i++){
      if(vector [i]==1){
          aux=aux+1;
          }
      
      }   
     if (aux==1){
      puntos=puntos+100;
      Puntuacion pun=new Puntuacion();
      pun.setVisible(true);
      this.setVisible(false);
      }
      }
      else{
          puntosp pun=new puntosp();
      pun.setVisible(true);
      this.setVisible(false);
      }    
    }//GEN-LAST:event_P3ActionPerformed

    private void P12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P12ActionPerformed
       if (jugadas<4){
          
switch (personaje){
                case 1:
                    P6.setVisible(false);
                    P9.setVisible(false);
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                    break;
                    case 2:
                  P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba negra");
                        break;
                    case 3:
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba negra");
                      
                        break;
                    case 4:
                         P6.setVisible(false);
                    P9.setVisible(false);
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 5:
                         P6.setVisible(false);
                    P9.setVisible(false);
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                    break;
                    case 6:
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba negra");
                        break;
                    case 7:
                         P6.setVisible(false);
                    P9.setVisible(false);
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                       
                        break;
                    case 8:
                          P6.setVisible(false);
                    P9.setVisible(false);
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                    break;
                    case 9:
         p1.setVisible(false);
                     vector[0]=0;
                    p2.setVisible(false);
                     vector[1]=0;
                    p3.setVisible(false);
                     vector[2]=0;
                    p4.setVisible(false);
                     vector[3]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p6.setVisible(false);
                     vector[5]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p10.setVisible(false);
                     vector[9]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p14.setVisible(false);
                     vector[13]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                    p16.setVisible(false);
                     vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    
                    P12.setVisible(false);
                      
                        break;
                    case 10:
                             P6.setVisible(false);
                    P9.setVisible(false);
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 11:
                           P6.setVisible(false);
                    P9.setVisible(false);
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 12:
                         P6.setVisible(false);
                    P9.setVisible(false);
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 13:
                    p1.setVisible(false);
                     vector[0]=0;
                    p2.setVisible(false);
                     vector[1]=0;
                    p3.setVisible(false);
                     vector[2]=0;
                    p4.setVisible(false);
                     vector[3]=0;
                    p5.setVisible(false);
                     vector[4]=0;
                    p6.setVisible(false);
                     vector[5]=0;
                    p7.setVisible(false);
                     vector[6]=0;
                    p8.setVisible(false);
                     vector[7]=0;
                    p10.setVisible(false);
                     vector[9]=0;
                    p11.setVisible(false);
                     vector[10]=0;
                    p12.setVisible(false);
                     vector[11]=0;
                    p14.setVisible(false);
                     vector[13]=0;
                    p15.setVisible(false);
                     vector[14]=0;
                    p16.setVisible(false);
                     vector[15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    
                    P12.setVisible(false);
                        break;
                    case 14:
                    
                    P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba negra");
                        break;
                    case 15:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                    case 16:
                         P6.setVisible(false);
                         P9.setVisible(false);
                          P12.setVisible(false);
                    ERRORPC.setText("No tiene Barba");
                        break;
                        
                }  
        jugadas=jugadas+1;
        j=String.valueOf(jugadas);
          Menu10.setText("Llevas "+j+"jugadas de 4"); 
      aux=0;
     for(int i=0;i<16;i++){
      if(vector [i]==1){
          aux=aux+1;
          }
      
      }   
     if (aux==1){
      puntos=puntos+100;
      Puntuacion pun=new Puntuacion();
      pun.setVisible(true);
      this.setVisible(false);
      }
      }
      else{
          puntosp pun=new puntosp();
      pun.setVisible(true);
      this.setVisible(false);
      }
                
    }//GEN-LAST:event_P12ActionPerformed

    private void P11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P11ActionPerformed
        if(jugadas<4){
            switch (personaje){
                case 1:
                    P11.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Rizado");
                    break;
                    case 2:
                    P11.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Rizado");
                        break;
                    case 3:
                    P11.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Rizado");
                        break;
                    case 4:
                    P11.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Rizado");
                        break;
                    case 5:
                    P11.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Rizado");
                        break;
                    case 6:
                    P11.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Rizado");
                        break;
                    case 7:
                    P11.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Rizado");
                        break;
                    case 8:
                    P11.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Rizado");
                    break;
                    case 9:
                   P11.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Rizado");
                        break;
                    case 10:
                    p1.setVisible(false);
                    vector [0]=0;
                    p2.setVisible(false);
                    vector [1]=0;
                    p3.setVisible(false);
                    vector [2]=0;
                    p4.setVisible(false);
                    vector [3]=0;
                    p5.setVisible(false);
                    vector [4]=0;
                    p6.setVisible(false);
                    vector [5]=0;
                    p7.setVisible(false);
                    vector [6]=0;
                    p8.setVisible(false);
                    vector [7]=0;
                    p9.setVisible(false);
                    vector [8]=0;
                    p11.setVisible(false);
                    vector [10]=0;
                    p12.setVisible(false);
                    vector [11]=0;
                    p13.setVisible(false);
                    vector [12]=0;
                    p14.setVisible(false);
                    vector [13]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P11.setVisible(false);
                  
                        break;
                    case 11:
                        P11.setVisible(false);
                        ERRORPC.setText("No tiene Cabello Rizado");
                        break;
                  
                    case 12:
                    P11.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Rizado");
                    break;
                    case 13:
                        P11.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Rizado");
                        break;
                    case 14:
                    P11.setVisible(false);
                    ERRORPC.setText("No tiene Cabello Rizado");
                 
                        break;
                    case 15:
                   p1.setVisible(false);
                    vector [0]=0;
                    p2.setVisible(false);
                    vector [1]=0;
                    p3.setVisible(false);
                    vector [2]=0;
                    p4.setVisible(false);
                    vector [3]=0;
                    p5.setVisible(false);
                    vector [4]=0;
                    p6.setVisible(false);
                    vector [5]=0;
                    p7.setVisible(false);
                    vector [6]=0;
                    p8.setVisible(false);
                    vector [7]=0;
                    p9.setVisible(false);
                    vector [8]=0;
                    p11.setVisible(false);
                    vector [10]=0;
                    p12.setVisible(false);
                    vector [11]=0;
                    p13.setVisible(false);
                    vector [12]=0;
                    p14.setVisible(false);
                    vector [13]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P11.setVisible(false);
                        break;
                    case 16:
                    p1.setVisible(false);
                    vector [0]=0;
                    p2.setVisible(false);
                    vector [1]=0;
                    p3.setVisible(false);
                    vector [2]=0;
                    p4.setVisible(false);
                    vector [3]=0;
                    p5.setVisible(false);
                    vector [4]=0;
                    p6.setVisible(false);
                    vector [5]=0;
                    p7.setVisible(false);
                    vector [6]=0;
                    p8.setVisible(false);
                    vector [7]=0;
                    p9.setVisible(false);
                    vector [8]=0;
                    p11.setVisible(false);
                    vector [10]=0;
                    p12.setVisible(false);
                    vector [11]=0;
                    p13.setVisible(false);
                    vector [12]=0;
                    p14.setVisible(false);
                    vector [13]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P11.setVisible(false);
                        break;
                        
                }
         jugadas=jugadas+1;
         j=String.valueOf(jugadas);
          Menu10.setText("Llevas "+j+" jugadas de 4"); 
      aux=0;
     for(int i=0;i<16;i++){
      if(vector [i]==1){
          aux=aux+1;
          }
      
      }   
     if (aux==1){
      puntos=puntos+100;
      Puntuacion pun=new Puntuacion();
      pun.setVisible(true);
      this.setVisible(false);
      }
      }
      else{
          puntosp pun=new puntosp();
      pun.setVisible(true);
      this.setVisible(false);
      }

    }//GEN-LAST:event_P11ActionPerformed

    private void P10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P10ActionPerformed
        if (jugadas<4){
            switch (personaje){
                case 1:
                    P10.setVisible(false);
                    ERRORPC.setText("No tiene piel oscura");
                    break;
                    case 2:
                    p1.setVisible(false);
                    vector [0]=0;
                    p3.setVisible(false);
                    vector [2]=0;
                    p4.setVisible(false);
                    vector [3]=0;
                    p5.setVisible(false);
                    vector [4]=0;
                    p7.setVisible(false);
                    vector [6]=0;
                    p8.setVisible(false);
                    vector [7]=0;
                    p9.setVisible(false);
                    vector [8]=0;
                    p10.setVisible(false);
                    vector [9]=0;
                    p12.setVisible(false);
                    vector [11]=0;
                    p13.setVisible(false);
                    vector [12]=0;
                    p14.setVisible(false);
                    vector [13]=0;
                    p16.setVisible(false);
                    vector [15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P10.setVisible(false);
                    
                        break;
                    case 3:
                    P10.setVisible(false);
                    ERRORPC.setText("No tiene piel oscura");
                      
                        break;
                    case 4:
                    P10.setVisible(false);
                    ERRORPC.setText("No tiene piel oscura");
                        break;
                    case 5:
                    P10.setVisible(false);
                    ERRORPC.setText("No tiene piel oscura");
                    
                    break;
                    case 6:
                     p1.setVisible(false);
                    vector [0]=0;
                    p3.setVisible(false);
                    vector [2]=0;
                    p4.setVisible(false);
                    vector [3]=0;
                    p5.setVisible(false);
                    vector [4]=0;
                    p7.setVisible(false);
                    vector [6]=0;
                    p8.setVisible(false);
                    vector [7]=0;
                    p9.setVisible(false);
                    vector [8]=0;
                    p10.setVisible(false);
                    vector [9]=0;
                    p12.setVisible(false);
                    vector [11]=0;
                    p13.setVisible(false);
                    vector [12]=0;
                    p14.setVisible(false);
                    vector [13]=0;
                    p16.setVisible(false);
                    vector [15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P10.setVisible(false);
                        break;
                    case 7:
                        P10.setVisible(false);
                    ERRORPC.setText("No tiene piel oscura");
                       
                        break;
                    case 8:
                    P10.setVisible(false);
                    ERRORPC.setText("No tiene piel oscura");
                    break;
                    case 9:
                    P10.setVisible(false);
                    ERRORPC.setText("No tiene piel oscura");
                        break;
                    case 10:
                        P10.setVisible(false);
                    ERRORPC.setText("No tiene piel oscura");
                        break;
                    case 11:
                   p1.setVisible(false);
                    vector [0]=0;
                    p3.setVisible(false);
                    vector [2]=0;
                    p4.setVisible(false);
                    vector [3]=0;
                    p5.setVisible(false);
                    vector [4]=0;
                    p7.setVisible(false);
                    vector [6]=0;
                    p8.setVisible(false);
                    vector [7]=0;
                    p9.setVisible(false);
                    vector [8]=0;
                    p10.setVisible(false);
                    vector [9]=0;
                    p12.setVisible(false);
                    vector [11]=0;
                    p13.setVisible(false);
                    vector [12]=0;
                    p14.setVisible(false);
                    vector [13]=0;
                    p16.setVisible(false);
                    vector [15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P10.setVisible(false);
                        break;
                    case 12:
                    P10.setVisible(false);
                    ERRORPC.setText("No tiene piel oscura");
                        break;
                    case 13:
                   
                   P10.setVisible(false);
                    ERRORPC.setText("No tiene piel oscura");
                        break;
                    case 14:
                     P10.setVisible(false);
                    ERRORPC.setText("No tiene piel oscura");
                        break;
                    case 15:
                     p1.setVisible(false);
                    vector [0]=0;
                    p3.setVisible(false);
                    vector [2]=0;
                    p4.setVisible(false);
                    vector [3]=0;
                    p5.setVisible(false);
                    vector [4]=0;
                    p7.setVisible(false);
                    vector [6]=0;
                    p8.setVisible(false);
                    vector [7]=0;
                    p9.setVisible(false);
                    vector [8]=0;
                    p10.setVisible(false);
                    vector [9]=0;
                    p12.setVisible(false);
                    vector [11]=0;
                    p13.setVisible(false);
                    vector [12]=0;
                    p14.setVisible(false);
                    vector [13]=0;
                    p16.setVisible(false);
                    vector [15]=0;
                    puntos=puntos+10;
                    puntaje=String.valueOf(puntos);
                    Puntos.setText(puntaje);
                    P10.setVisible(false);
                        break;
                    case 16:
                        P10.setVisible(false);
                    ERRORPC.setText("No tiene piel oscura");
                        break;
                        
                }
        jugadas=jugadas+1;
        j=String.valueOf(jugadas);
          Menu10.setText("Llevas "+j+" jugadas de 4"); 
      aux=0;
     for(int i=0;i<16;i++){
      if(vector [i]==1){
          aux=aux+1;
          }
      
      }   
     if (aux==1){
      puntos=puntos+100;
      Puntuacion pun=new Puntuacion();
      pun.setVisible(true);
      this.setVisible(false);
      }
      }
      else{
          puntosp pun=new puntosp();
      pun.setVisible(true);
      this.setVisible(false);
      }
    }//GEN-LAST:event_P10ActionPerformed

    private void PuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PuntosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PuntosActionPerformed

    private void p3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p3ActionPerformed
        
    }//GEN-LAST:event_p3ActionPerformed

    private void p11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p11ActionPerformed
        
    }//GEN-LAST:event_p11ActionPerformed

    private void p12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p12ActionPerformed
        
        // TODO add your handling code here:
    }//GEN-LAST:event_p12ActionPerformed

    private void p4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p4ActionPerformed
        
    }//GEN-LAST:event_p4ActionPerformed

    private void p14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p14ActionPerformed
        
    }//GEN-LAST:event_p14ActionPerformed

    private void p6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p6ActionPerformed
        
    }//GEN-LAST:event_p6ActionPerformed

    private void p5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p5ActionPerformed
        
    }//GEN-LAST:event_p5ActionPerformed

    private void p13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p13ActionPerformed
        
    }//GEN-LAST:event_p13ActionPerformed

    private void p16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p16ActionPerformed
        
    }//GEN-LAST:event_p16ActionPerformed

    private void p8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p8ActionPerformed
        
    }//GEN-LAST:event_p8ActionPerformed

    private void p7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p7ActionPerformed
        
    }//GEN-LAST:event_p7ActionPerformed

    private void p15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p15ActionPerformed
        
    }//GEN-LAST:event_p15ActionPerformed

    private void p10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p10ActionPerformed
        
    }//GEN-LAST:event_p10ActionPerformed

    private void p9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p9ActionPerformed
        
    }//GEN-LAST:event_p9ActionPerformed

    private void p1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p1ActionPerformed
        
    }//GEN-LAST:event_p1ActionPerformed

    private void p2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p2ActionPerformed
        
    }//GEN-LAST:event_p2ActionPerformed

    private void IniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IniciarActionPerformed
        if (jugadas==0){
            Random aleatorio = new Random(System.currentTimeMillis());
            personaje = aleatorio.nextInt(16)+1;
            for(int i=0;i<16;i++){
            vector[i]=1;
             preguntas.setVisible(true);
            Iniciar.setVisible(false);
            }
           
}

        

    }//GEN-LAST:event_IniciarActionPerformed

    private void REGLASActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_REGLASActionPerformed
    Reglas r=new Reglas();
    r.setVisible(true);
    }//GEN-LAST:event_REGLASActionPerformed

    private void salir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salir1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Winsows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JUEGO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JUEGO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JUEGO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JUEGO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JUEGO().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ERRORPC;
    private javax.swing.JButton Iniciar;
    private javax.swing.JLabel Menu10;
    private javax.swing.JLabel Menu2;
    private javax.swing.JLabel Menu4;
    private javax.swing.JLabel Menu5;
    private javax.swing.JButton P1;
    private javax.swing.JButton P10;
    private javax.swing.JButton P11;
    private javax.swing.JButton P12;
    private javax.swing.JButton P2;
    private javax.swing.JButton P3;
    private javax.swing.JButton P4;
    private javax.swing.JButton P5;
    private javax.swing.JButton P6;
    private javax.swing.JButton P7;
    private javax.swing.JButton P8;
    private javax.swing.JButton P9;
    private javax.swing.JTextField Puntos;
    private javax.swing.JButton REGLAS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    public javax.swing.JButton p1;
    private javax.swing.JButton p10;
    private javax.swing.JButton p11;
    private javax.swing.JButton p12;
    private javax.swing.JButton p13;
    private javax.swing.JButton p14;
    private javax.swing.JButton p15;
    private javax.swing.JButton p16;
    private javax.swing.JButton p2;
    private javax.swing.JButton p3;
    private javax.swing.JButton p4;
    private javax.swing.JButton p5;
    private javax.swing.JButton p6;
    private javax.swing.JButton p7;
    private javax.swing.JButton p8;
    private javax.swing.JButton p9;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel preguntas;
    private javax.swing.JButton salir1;
    // End of variables declaration//GEN-END:variables
}
