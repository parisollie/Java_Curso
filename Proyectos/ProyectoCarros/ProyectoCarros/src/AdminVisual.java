


import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import javax.swing.JOptionPane;


public class AdminVisual extends javax.swing.JFrame {
    static File bin_list;
    static FileInputStream rd;
    static ObjectInputStream obj = null;

    public AdminVisual() {
        this.setTitle("Menu admnistrador");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        jButton5.setText("jButton5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton1.setText("Pedido");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 210, 139, -1));

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Administrador");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, -1, 30));

        jButton3.setBackground(new java.awt.Color(204, 204, 255));
        jButton3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 390, 120, 30));

        jButton4.setBackground(new java.awt.Color(204, 204, 255));
        jButton4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton4.setText("Caractertísticas de los carros");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 240, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Radial.jpg"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 430));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose();
        JOptionPane.showMessageDialog(null,"Has salido del programa");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
Vehiculo vehiculos[] = new Vehiculo[6];
        int numSerieMotor = 0;
        int year = 0;
        int pasajeros = 0;
        int carga = 0;
        int ejes = 0;
        int rodadas = 0;
        double precio = 0;
        String marca = "";
        int dato = 0;

        do {
            try {
                dato = Integer.parseInt(JOptionPane.showInputDialog(null,
                        "1.MINICopper\n"
                        + "2.Ferrari\n"
                        + "3.Camioneta\n"
                        + "4.Van\n"
                        + "5.Tesla\n"
                        + "6.Beetle\n"
                        + "7.Salir\n"
                        + "Elige una opcion...", "Menu del carro elegido", JOptionPane.QUESTION_MESSAGE));

                switch (dato) {

                    case 1:
                        JOptionPane.showMessageDialog(null, "MINICopper");
                        numSerieMotor = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el numero de la serie del motor: ", "Solicitando los datos del MINICopper", 3));
                        marca = JOptionPane.showInputDialog(null, "Introduzca la marca del carro: ", "Solicitando la marca : ", 3);
                        year = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el año del carro: ", "Solicitando el año : ", 3));
                        precio = Double.parseDouble(JOptionPane.showInputDialog(null, "Ingresa el precio del carro: ", "Solicitando precio : ", 3));
                        pasajeros = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el numero de pasajeros: ", "Solicitando el numero de pasajeros: ", 3));
                        MINICopper mn = new MINICopper (numSerieMotor, year, marca, precio, pasajeros);
                        ArrayList<MINICopper> min = new ArrayList<>();
                        min.add(mn);
                        String fichero = "minic.dat";
                        File archivo;
                         		
                        FileOutputStream mk;
                        ObjectOutputStream obj = null;
                        try{
                            mk = new FileOutputStream(fichero);
                            obj = new ObjectOutputStream(mk); 
                            obj.writeObject(min);
                        }catch(IOException e){
                            e.printStackTrace();
        		}
                        finally{
                            try{
				archivo = new File(fichero);
				if (archivo.exists())
                                JOptionPane.showMessageDialog(null, "Archivo Creado", "Fin", JOptionPane.INFORMATION_MESSAGE);
				obj.close();
			}catch(IOException e){
				e.printStackTrace();
			}
                            JOptionPane.showMessageDialog(null, "Coche guardado correctamente", "Fin", JOptionPane.INFORMATION_MESSAGE);
                        }
                        
                        //Archivos ar = new Archivos();
                        //ar.Cargar(fichero);
                 
                        //vehiculos[0] = new Ferrari(numSerieMotor, year, marca, precio, pasajeros);
                        //vehiculos[0].verDatos();
                        break;
                    case 2:
                        JOptionPane.showMessageDialog(null, "Ferrari");
                        numSerieMotor = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el numero de la serie del motor: ", "Solicitando los datos del Ferrari", 3));
                        marca = JOptionPane.showInputDialog(null, "Introduzca la marca del carro: ", "Solicitando la marca : ", 3);
                        year = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el año del carro: ", "Solicitando el año : ", 3));
                        precio = Double.parseDouble(JOptionPane.showInputDialog(null, "Ingresa el precio del carro: ", "Solicitando precio : ", 3));
                        pasajeros = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el numero de pasajeros: ", "Solicitando el numero de pasajeros: ", 3));
                        
                        Ferrari fer = new Ferrari (numSerieMotor, year, marca, precio, pasajeros);
                        ArrayList<Ferrari>ferra = new ArrayList<>();
                        ferra.add(fer);
                        String fichero1 = "ferrari.dat";
                        File archivo1;
                         
                        obj = null;
                        try{
                            mk = new FileOutputStream(fichero1);
                            obj = new ObjectOutputStream(mk); 
                            obj.writeObject(ferra);
                        }catch(IOException e){
                            e.printStackTrace();
        		}
                        finally{
                            try{
				archivo1 = new File(fichero1);
				if (archivo1.exists())
                                JOptionPane.showMessageDialog(null, "Archivo Creado", "Fin", JOptionPane.INFORMATION_MESSAGE);
				obj.close();
			}catch(IOException e){
				e.printStackTrace();
			}
                            JOptionPane.showMessageDialog(null, "Coche guardado correctamente", "Fin", JOptionPane.INFORMATION_MESSAGE);
                        }
                        //vehiculos[1] = new MINICopper(numSerieMotor, year, marca, precio, pasajeros);
                        //vehiculos[1].verDatos();
                        
                        break;
                    case 3:
                        JOptionPane.showMessageDialog(null, "Camioneta");
                        numSerieMotor = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el numero de la serie del motor: ", "Solicitando los datos de la camioneta", 3));
                        marca = JOptionPane.showInputDialog(null, "Introduzca la marca del carro: ", "Solicitando la marca: ", 3);
                        year = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el año del carro: ", "Solicitando el año del carro: ", 3));
                        precio = Double.parseDouble(JOptionPane.showInputDialog(null, "Ingresa el precio del carro: ", "Solicitando precio del carro: ", 3));
                        pasajeros = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el numero de pasajeros: ", "Solicitando el numero de pasajeros: ", 3));
                        rodadas = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa la cantidad de rodadas: ", "Solicitando el numero de rodadas: ", 3));
                        ejes = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa la cantidad de ejes: ", "Solicitando el numero de ejes: ", 3));
                        carga = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa la cantidad de carga: ", "Solicitando la carga: ", 3));

                        Camioneta cam = new Camioneta (carga, ejes, rodadas, pasajeros, numSerieMotor, year, marca, precio);
                        ArrayList<Camioneta>cami = new ArrayList<>();
                        cami.add(cam);
                        String fichero2 = "camioneta.dat";
                        File archivo2;
                         
                        obj = null;
                        try{
                            mk = new FileOutputStream(fichero2);
                            obj = new ObjectOutputStream(mk); 
                            obj.writeObject(cami);
                        }catch(IOException e){
                            e.printStackTrace();
        		}
                        finally{
                            try{
				archivo2 = new File(fichero2);
				if (archivo2.exists())
                                JOptionPane.showMessageDialog(null, "Archivo Creado", "Fin", JOptionPane.INFORMATION_MESSAGE);
				obj.close();
			}catch(IOException e){
				e.printStackTrace();
			}
                            JOptionPane.showMessageDialog(null, "Coche guardado correctamente", "Fin", JOptionPane.INFORMATION_MESSAGE);
                        }
                        
                        //vehiculos[2] = new Camioneta(carga,ejes,rodadas,pasajeros,numSerieMotor, year, marca, precio);
                        //vehiculos[2].verDatos();
                        
                        break;
                    case 4:
                        JOptionPane.showMessageDialog(null, "Van");
                        numSerieMotor = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el numero de la serie del motor: ", "Solicitando los datos de la vagoneta", 3));
                        marca = JOptionPane.showInputDialog(null, "Introduzca la marca del carro: ", "Solicitando la marca: ", 3);
                        year = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el año del carro: ", "Solicitando el año: ", 3));
                        precio = Double.parseDouble(JOptionPane.showInputDialog(null, "Ingresa el precio del carro: ", "Solicitando precio : ", 3));
                        pasajeros = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el numero de pasajeros: ", "Solicitando el numero de pasajeros: ", 3));
    
                        Vagoneta van = new Vagoneta (numSerieMotor, year, marca, precio, pasajeros);
                        ArrayList<Vagoneta> vag = new ArrayList<>();
                        vag.add(van);
                        String fichero3 = "van.dat";
                        File archivo3;
                         
                        obj = null;
                        try{
                            mk = new FileOutputStream(fichero3);
                            obj = new ObjectOutputStream(mk); 
                            obj.writeObject(vag);
                        }catch(IOException e){
                            e.printStackTrace();
        		}
                        finally{
                            try{
				archivo3 = new File(fichero3);
				if (archivo3.exists())
                                JOptionPane.showMessageDialog(null, "Archivo Creado", "Fin", JOptionPane.INFORMATION_MESSAGE);
				obj.close();
			}catch(IOException e){
				e.printStackTrace();
			}
                            JOptionPane.showMessageDialog(null, "Coche guardado correctamente", "Fin", JOptionPane.INFORMATION_MESSAGE);
                        }
                        
                        //vehiculos[3] = new Vagoneta(numSerieMotor, year, marca, precio, pasajeros);
                        //vehiculos[3].verDatos();
                        break;
                    case 5:
                        JOptionPane.showMessageDialog(null, "Tesla");
                        numSerieMotor = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el numero de la serie del motor: ", "Solicitando los datos del Tesla", 3));
                        marca = JOptionPane.showInputDialog(null, "Introduzca la marca del carro: ", "Solicitando la marca : ", 3);
                        year = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el año del carro: ", "Solicitando el año : ", 3));
                        precio = Double.parseDouble(JOptionPane.showInputDialog(null, "Ingresa el precio del carro: ", "Solicitando precio : ", 3));
                        pasajeros = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el numero de pasajeros: ", "Solicitando el numero de pasajeros: ", 3));
                        
                        Tesla tes = new Tesla (numSerieMotor, year, marca, precio, pasajeros);
                        ArrayList<Tesla> tesl = new ArrayList<>();
                        tesl.add(tes);
                        String fichero4 = "tesla.dat";
                        File archivo4;
                         
                        obj = null;
                        try{
                            mk = new FileOutputStream(fichero4);
                            obj = new ObjectOutputStream(mk); 
                            obj.writeObject(tesl);
                        }catch(IOException e){
                            e.printStackTrace();
        		}
                        finally{
                            try{
				archivo4 = new File(fichero4);
				if (archivo4.exists())
                                JOptionPane.showMessageDialog(null, "Archivo Creado", "Fin", JOptionPane.INFORMATION_MESSAGE);
				obj.close();
			}catch(IOException e){
				e.printStackTrace();
			}
                            JOptionPane.showMessageDialog(null, "Coche guardado correctamente", "Fin", JOptionPane.INFORMATION_MESSAGE);
                        }
                        //vehiculos[4] = new Tesla (numSerieMotor, year, marca, precio, pasajeros);
                        //vehiculos[4].verDatos();
                        break;

                    case 6:
                        JOptionPane.showMessageDialog(null, "Beetle");
                        numSerieMotor = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el numero de la serie del motor: ", "Solicitando los datos del Beetle", 3));
                        marca = JOptionPane.showInputDialog(null, "Introduzca la marca del carro: ", "Solicitando la marca : ", 3);
                        year = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el año del carro: ", "Solicitando el año : ", 3));
                        precio = Double.parseDouble(JOptionPane.showInputDialog(null, "Ingresa el precio del carro: ", "Solicitando precio : ", 3));
                        pasajeros = Integer.parseInt(JOptionPane.showInputDialog(null, "Ingresa el numero de pasajeros: ", "Solicitando el numero de pasajeros: ", 3));
 
                        Beetle bet = new Beetle (numSerieMotor, year, marca, precio, pasajeros);
                        ArrayList<Beetle>bee = new ArrayList<>();
                        bee.add(bet);
                        String fichero5 = "beetle.dat";
                        File archivo5;
                         
                        obj = null;
                        try{
                            mk = new FileOutputStream(fichero5);
                            obj = new ObjectOutputStream(mk); 
                            obj.writeObject(bee);
                        }catch(IOException e){
                            e.printStackTrace();
        		}
                        finally{
                            try{
				archivo5 = new File(fichero5);
				if (archivo5.exists())
                                JOptionPane.showMessageDialog(null, "Archivo Creado", "Fin", JOptionPane.INFORMATION_MESSAGE);
				obj.close();
			}catch(IOException e){
				e.printStackTrace();
			}
                            JOptionPane.showMessageDialog(null, "Coche guardado correctamente", "Fin", JOptionPane.INFORMATION_MESSAGE);
                        }
                        //vehiculos[5] = new Beetle(numSerieMotor, year, marca, precio, pasajeros);
                        //vehiculos[5].verDatos();
                        break;

                    case 7:
                        JOptionPane.showMessageDialog(null, "Aplicacion finalizada", "Fin", JOptionPane.INFORMATION_MESSAGE);
                        break;
                    default:
                        JOptionPane.showMessageDialog(null, "No se encuentra el numero");
                        break;
                }

            } catch (NumberFormatException n) {
                JOptionPane.showMessageDialog(null, "Error " + n.getMessage());
            }
        } while (dato != 7);

                          
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        int dato = 0;

        do {
            try {
                dato = Integer.parseInt(JOptionPane.showInputDialog(null,
                        "1.MinniCopper\n"
                        + "2.Ferrari\n"
                        + "3.Camioneta\n"
                        + "4.Van\n"
                        + "5.Tesla\n"
                        + "6.Beetle\n"
                        + "7.Salir\n"
                        + "Elige una opcion...", "Caracteristicas del carro",
                        JOptionPane.QUESTION_MESSAGE));

                switch (dato) {

                    case 1:
                        JOptionPane.showMessageDialog(null, "MINICopper");
                        JOptionPane.showMessageDialog(null, "Cantidad de "
                                + "pasajeros: 4 " + "\nColores: "
                                + "[Rojo-Rosa-Azul-Verde] "
                                + "\nAño: 2015-2019 " + "\nMarca: MINICoper " + 
                              "\nPrecio: [$500,000-$700,000] " , 
                                " Auto deportivo",
                                JOptionPane.INFORMATION_MESSAGE);
                        break;
                    case 2:
                        JOptionPane.showMessageDialog(null, "Ferrari");
                        JOptionPane.showMessageDialog(null, "Cantidad de"
                                + " pasajeros: 2-4 " + "\nColores:"
                                + "[Rojo-Rosa-Azul-Amarillo] "
                                + "\nAño: 2018-2019 " + "\nMarca: Ferrari " + 
                              "\nPrecio: [$1,4500,000-$1,500,000] " ,
                                " Auto de lujo",
                                JOptionPane.INFORMATION_MESSAGE);
                        break;
                    case 3:
                        JOptionPane.showMessageDialog(null, "Camioneta");
                        JOptionPane.showMessageDialog(null, "Cantidad de "
                                + "pasajeros: 2-6 " + "\nColores: "
                                + "[Rojo-Negro-Azul-Rojo] "
                                + "\nAño: 2018-2019 " + "\nMarcas: "
                                + "Ford y Chevrolet " + 
                              "\nPrecio: [$500,000-$854,000] "+"\nCantidad de"
                                + " carga: [400-700] kg" , " Camioneta",
                                JOptionPane.INFORMATION_MESSAGE);
                        break;
                    case 4:
                        JOptionPane.showMessageDialog(null, "Van");
                        JOptionPane.showMessageDialog(null, "Cantidad de "
                                + "pasajeros: 6-8 " + "\nColores: "
                                + "[Rojo-Gris-Azul-Blanco] "
                                + "\nAño: 2016-2019 " + "\nMarca: Volkswagen " + 
                              "\nPrecio: [$350,000-$400,000]" , " Vagoneta",
                                JOptionPane.INFORMATION_MESSAGE);
                        break;
                    case 5:
                        JOptionPane.showMessageDialog(null, "Tesla");
                        JOptionPane.showMessageDialog(null, "Cantidad de "
                                + "pasajeros: 2-4 " +
                                "\nColores: [Rojo-Verde-Azul metalico-Blanco] "
                                + "\nAño: 2018-2019 " + "\nMarca: Tesla " + 
                              "\nPrecio: [$750,000-$800,000]" , " Auto compacto",
                                JOptionPane.INFORMATION_MESSAGE);
                        break;

                    case 6:
                        JOptionPane.showMessageDialog(null, "Beetle");
                        JOptionPane.showMessageDialog(null, "Cantidad"
                                + " de pasajeros: 2-4 " +
                                "\nColores:[Rojo-Verde-Rosa metalico-Turquesa] "
                                + "\nAño: 2015-2019 " + "\nMarca: Volkswagen " + 
                              "\nPrecio:[$500,000-$800,000]" , " Auto deportivo",
                                JOptionPane.INFORMATION_MESSAGE);
                        break;

                    case 7:
                        JOptionPane.showMessageDialog(null, "Aplicacion"
                                + " finalizada", "Fin",
                                JOptionPane.INFORMATION_MESSAGE);
                        break;
                    default:
                        JOptionPane.showMessageDialog(null,
                                "No se encuentra el numero");
                        break;
                }

            } catch (NumberFormatException n) {
                JOptionPane.showMessageDialog(null, "Error " + n.getMessage());
            }
        } while (dato != 7);

    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminVisual().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
